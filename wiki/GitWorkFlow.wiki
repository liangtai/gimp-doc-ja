Once you modify any source text or image files, you should anchor to fix (or reserve to delay) or dismiss them, otherwise you cannot update the tree.

If all changes during your work are not necessary, they can be reverted by
{{{git checkout -- images/ja po/ja}}}
You need this dismissing action if you work on the master branch (which is the space created just after doing "git clone" command).

Creating branch for work space is avoid this problem.  The command
{{{git checkout -b branch-foo origin/master}}}
is a shorthand of "git branch branch-foo origin/master" and then "git checkout branch-foo".
You can set branches name as you like (branch-foo for the example above).
The command
{{{git branch}}}
tells where is the current branch.  Doing
{{{git checkout branch-bar}}}
switches to other branch (branch-bar in the example above).

Once you modify some source file, then I recomend to check what is happend by
{{{git diff}}}
, then anchor to fix by
{{{git commit -a}}}
(The command term is "commit", though, it does not send your information to the main repository like as SVN system.)
Then the command line terminal becomes VI-like editor screen so that you can edit brief summary at the first line for your commit as well as more detailed description from 3rd line.  This screen also shows the status about the current branch which can be seen by
{{{git status}}}

You can see history of commits until now by
{{{git log}}}
Contents of commit can be seen by
{{{git show HEAD^}}}
To make patch file of this commit, do
{{{git format-patch HEAD^}}}

Then you can drop away the branch.  After switch to another branch, do
{{{git branch -d branch-foo}}}
to erase the branch.

To reserve your modification, do
{{{git stash save}}}

It is said already, but these instruction does not cover whole system.  You can get help about all commands by
{{{git help _command_}}}
