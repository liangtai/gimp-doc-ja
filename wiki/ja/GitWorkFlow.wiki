git では情報を変更したら定着(あるいは保留)または放棄しないことには更新コマンドが実行できません。

ソースに手を加える作業をされたあと、その変更内容が不要なら
{{{git checkout -- images/ja po/ja}}}
とすればすべて元に戻せます。この放棄処置は master ブランチ上
(ローカルコピーを初めて作った直後の居場所)ではほぼ必須です。

それだと不都合であるなら新たなブランチを作ってそこで作業します。
{{{git checkout -b branch7743 origin/master}}}
ブランチの名前はご自分でお好きなように決められます。(この例では branch7743)
また *いくつでもブランチが作れます。* ちなみに現在居るブランチの名前を知るには
{{{git branch}}}
コマンドがあります。ブランチ間の移動は
{{{git checkout branch7743}}}
です。

さてソースに何らかの変更を加えたら、できればひとまず
{{{git diff}}}
コマンドで変更の実態を確認してから、
{{{git commit -a}}}
で定着させてください。(コミットとありますが svn のように取得先のコンピュータに情報を
送りつけるようなことはありません。)このとき画面が vi エディタのスクリーンに変わり、
現在のブランチの状態がすべて#記号で始まる数十行で表示されます。
ちなみにこの表示は
{{{git status}}}
で表示されるブランチの状態情報とほぼ同じです。ここで1行目に簡潔な要約を書き、 
必要なら2行目を空行にして3行目以降に詳しい説明文を書いてから、 
vi の保存コマンドを実行してください。

定着した変更の履歴は
{{{git log}}}
で表示できます。変更の内容は
{{{git show HEAD^}}}
で確認できます。これをパッチファイル化して残したいときは
{{{git format-patch HEAD^}}}
とします。

そのあとはブランチを削除しても構いません。他のブランチへ移動してから
{{{git branch -d branch7743}}}
とすれば消せますが、独自の変更を定着させたブランチは -d の代わりに -D として
強制削除させる必要があるようです。

保留は
{{{git stash save}}}
です。

繰り返しになりますがここに紹介するコマンドの用例はほんの一部です。
どのコマンドも
{{{git help _command_}}}
で詳しいマニュアルが表示されますのでいろいろ試してみてください。
