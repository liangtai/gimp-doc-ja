<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
                       "http://www.docbook.org/xml/4.3/docbookx.dtd">
<!-- section history:
  2007-05-03 lexa: added plugin installation info for OS X
  2007-01-28 added Spanish translation by manuq
  2006-09-17 added norwegian translation by KoSt
  2006-07-31 lexa: applied patch from hans de jonge
  2008-02-08 jpl: relecture et légères corrections
-->
<!--revision2792 2009-03-25-->
<sect1 id="gimp-concepts-plugins">
  <title lang="en">Plugins</title>
  <title lang="ja">プラグイン</title>
  <indexterm lang="en">
    <primary>Plugins</primary>
    <secondary>Introduction</secondary>
  </indexterm>
  <indexterm lang="ja">
    <primary>プラグイン</primary>
    <secondary>はじめに</secondary>
  </indexterm>
  <sect2>
    <title lang="en">Introduction</title>
    <title lang="ja">はじめに</title>
    <para lang="en">
      One of the nicest things about <acronym>GIMP</acronym> is how easily its
      functionality can be extended, by using plugins.
      <acronym>GIMP</acronym> plugins are external programs that run under the
      control of the main <acronym>GIMP</acronym> application and interact
      with it very closely. Plugins can manipulate images in almost any way
      that users can. Their advantage is that it is much easier to add a
      capability to <acronym>GIMP</acronym> by writing a small plugin than by
      modifying the huge mass of complex code that makes up the
      <acronym>GIMP</acronym> core. Many valuable plugins have C source code
      that only comes to 100-200 lines or so.
    </para>
    <para lang="en">
      Several dozen plugins are included in the main <acronym>GIMP</acronym>
      distribution, and installed automatically along with
      <acronym>GIMP</acronym>. Most of them can be accessed through the
      <guimenu>Filters</guimenu> menu (in fact, everything in that menu is a
      plugin), but a number are located in other menus. In many cases you can
      use one without ever realizing that it is a plugin: for example, the
      "Normalize" function for automatic color correction is actually a
      plugin, although there is nothing about the way it works that would tell
      you this.
    </para>
    <para lang="en">
      In addition to the plugins included with GIMP , many more are available
      on the net. A large number can be found at the GIMP Plugin Registry
      <xref linkend="bibliography-online-gimp-plugin-registry"/>,
      a web site whose purpose is to provide a central repository for
      plugins. Creators of plugins can upload them there; users in search of
      plugins for a specific purpose can search the site in a variety of ways.
    </para>
    <para lang="en">
      Anybody in the world can write a <acronym>GIMP</acronym> plugin and make
      it available over the web, either via the Registry or a personal web
      site, and many very valuable plugins can be obtained in this way ­ some
      are described elsewhere in the User's Manual. With this freedom from
      constraint comes a certain degree of risk, though: the fact that anybody
      can do it means that there is no effective quality control. The plugins
      distributed with <acronym>GIMP</acronym> have all been tested and tuned
      by the developers, but many that you can download were just hacked
      together in a few hours and then tossed to the winds. Some plugin
      creators just don't care about robustness, and even for those who do,
      their ability to test on a variety of systems in a variety of situations
      is often quite limited. Basically, when you download a plugin, you are
      getting something for free, and sometimes you get exactly what you pay
      for. This is not said in an attempt to discourage you, just to make sure
      you understand reality.
    </para>
    <para lang="ja">
      プラグインは機能拡張の手軽さで<acronym>GIMP</acronym>の最大の魅力のひとつ
      に挙げられます。 プラグインは<acronym>GIMP</acronym>の主幹
      アプリケーションの制御下で動作し、 両者は緊密に相互作用します。 ユーザが
      [手で]行う画像操作はほとんど何でもプラグインで実行できます。 小さな
      プラグインのコードを書けば、 <acronym>GIMP</acronym>の中核を成す
      膨大な数の複雑なコードに手をつけることなく、 簡単に機能を<acronym>GIMP
      </acronym>に追加できるところが強みです。 現に価値あるプラグインの大多数は
      ほぼ100から200行のC言語ソースだけでできています。
    </para>
    <para lang="ja">
      <acronym>GIMP</acronym>には数十個のプラグインが配付版に入っていて、
      自動的に<acronym>GIMP</acronym>と一緒にインストールされます。 それらの
      ほとんどが <guimenu>フィルタ(<accel>R</accel>)</guimenu> メニューから呼び
      出せます (実はこのメニューの中身はいずれもプラグインです) が、
      数点ですが他のメニューに属するものもあります。 プラグインを使うといっても
      十中八九はプラグインであることに気付かないでしょう。 例えば色の自動調整
      フィルタの<quote>正規化</quote>コマンドは実際にはプラグインなのですが、
      使っている人にそのことを伝えるものは何もありません。
    </para>
    <para lang="ja">
      プラグインは<acronym>GIMP</acronym>同梱のもの以外にもネット上にはもっと
      たくさんあります。 プラグインの中心的な貯蔵庫の役割を担う目的で設立された
      <acronym>GIMP</acronym> Plugin Registry (英語)
      <xref linkend="bibliography-online-gimp-plugin-registry"/> でなら多数の
      発見があるはずです。 プラグインを制作したら誰でもここにアップロード
      できます。 特定の用途のプラグインを探すにもこのサイトならいろいろな検索
      方法が使えます。
    </para>
    <para lang="ja">
      世界中の誰でも自作の<acronym>GIMP</acronym>プラグインを<acronym>GIMP
      </acronym> Plugin Registry や自身のウェブサイト上で公開できますし、 数
      有る有益なプラグインがそうしたところから手に入ります。 この使用のてびきの
      どこかでもそんなプラグインのことに触れています。 しかし自由勝手さの反面で
      ある程度の危険が伴います。 誰でもできるということは実質的な品質管理が
      行なわれないことを意味します。 <acronym>GIMP</acronym>同梱で配布される
      プラグインならば開発者によるテストと整調を経ていますが、 ダウンロードで
      手に入る物のなかにはほんの数時間だけで捻り出してすぐ流布された代物が
      少なくありません。 また動作の健全さに注意を払わずに作成する者もいますし、
      たとえ意識はしてもあらゆるシステムを試しあらゆる状況で何度も動作確認
      できるような人は限られています。 何かプラグインをダウンロードしたとして、
      根本的にそれはタダで得るものがある一方で時には幾許か払うべき代償も生じる
      と思ってください。 でもダウンロードを思い止まって欲しいからこんな話を
      しているわけではありません。 ただ現実がどうなのか理解していただきたかった
      からです。
    </para>
    <warning>
      <para lang="en">
        Plugins, being full-fledged executable programs, can do any of the
        things that any other program can do, including install back-doors on
        your system or otherwise compromise its security. Don't install a
        plugin unless it comes from a trusted source.
      </para>
      <para lang="ja">
        プラグインは完全無欠な動作可能プログラムの一種なので他のプログラムが
        できることなら何でも実行できます。 つまり密かにバックドア (裏口) 
        プログラムをあなたのシステムに潜り込ませたり、 他にもその安全保障を
        脅かすことが可能なのです。 信頼のおける配布者を通じて得たものでなければ
        インストールしてはいけません。
      </para>
    </warning>
    <para lang="en">
      These caveats apply as much to the Plugin Registry as to any other
      source of plugins. The Registry is available to any plugin creator who
      wants to use it:  there is no systematic oversight. Obviously if the
      maintainers became aware that something evil was there, they would
      remove it. (That hasn't happened yet.)  There is, however, for
      <acronym>GIMP</acronym> and its plugins the same warranty as for any
      other free software: namely, none.
    </para>
    <para lang="ja">
      プラグインの配布者について以上の話の要点は Plugin Registry の内外を問い
      ません。 この登録サイトはプラグインを作成したら誰でも使える場所です。
      組織立った取締りはありません。 明らかな悪意のある代物が置かれているのを
      管理者が気付けば、 削除の対象となるでしょう。 (まだそのような事態は
      起きていません。) しかしながら<acronym>GIMP</acronym>やそのプラグインは、
      他のどのフリーソフトウェアとも同様、 <emphasis>無保証</emphasis> です。
    </para>
    <caution>
      <para lang="en">
        Plugins have been a feature of <acronym>GIMP</acronym> for many
        versions. However, plugins written for one version of
        <acronym>GIMP</acronym> can hardly ever be used successfully with
        other versions. They need to be ported: sometimes this is easy,
        sometimes not. Many plugins are already available in several
        versions. Bottom line: before trying to install a plugin, make sure
        that it is written for your version of <acronym>GIMP</acronym>.
      </para>
      <para lang="ja">
        プラグインは数々の版の<acronym>GIMP</acronym>とともにその特徴を成して
        きました。 ところがある版の<acronym>GIMP</acronym>のために書かれた
        プラグインが他の版でちゃんと使えた例はめったにありません。 移植が必要
        なのですが、 簡単に済むこともあればそうはいかない場合もあります。
        多くのプラグインは既にさまざまな版に対応ができています。 プラグインを
        導入する際には最低限それがお使いの<acronym>GIMP</acronym>に適合して
        いるかどうかご確認ください。
      </para>
    </caution>
  </sect2>

  <sect2>
    <title lang="en">Using Plugins</title>
    <title lang="ja">プラグインを使用</title>
    <para lang="en">
      For the most part you can use a plugin like any other
      <acronym>GIMP</acronym> tool, without needing to be aware that it is a
      plugin. But there are a few things about plugins that are useful to
      understand.
    </para>
    <para lang="en">
      One is that plugins are generally not as robust as the
      <acronym>GIMP</acronym> core. When <acronym>GIMP</acronym> crashes, it
      is considered a very serious thing: it can cost the user a lot of
      trouble and headache. When a plugin crashes, the consequences are
      usually not so serious.  In most cases you can just continuing working
      without worrying about it.
    </para>
    <para lang="ja">
      だいたいいつもはプラグインだと意識せずとも他の<acronym>GIMP</acronym>
      ツールと同じように使えます。 しかし僅かですが理解しておくと便利な事柄が
      あります。
    </para>
    <para lang="ja">
      ひとつには通常プラグインは<acronym>GIMP</acronym>の中核と比較して頑丈には
      できていないといえます。 仮にも<acronym>GIMP</acronym>が異常終了するのは
      非常に深刻な事態です。 ユーザにとっても計り知れない災厄と頭痛が襲いかかる
      でしょう。 一方でプラグインが異常終了した場合にその結果は通常さほど酷くは
      ありません。 ほぼ通常はそういったことを恐れないで作業を続けられます。
    </para>
    <note>
      <para lang="en">
        Because plugins are separate programs, they communicate with the
        <acronym>GIMP</acronym> core in a special way: The
        <acronym>GIMP</acronym> developers call it <quote>talking over a
          wire</quote>. When a plugin crashes, the communication breaks down,
        and you will see an error message about a <quote>wire read
          error</quote>.
      </para>
      <para lang="ja">
        プラグインは分離独立したプログラムなので、 <acronym>GIMP</acronym>本体
        とは特別な方法で通信を行います。 <acronym>GIMP</acronym>開発者はそれを
        <quote>talking over a wire</quote> (有線会話) と呼んでいます。
        プラグインが異常終了して通信が途絶えた時には、 <quote>wire read error
        </quote> (通信線解読障害) を知らせるエラーメッセージが出ます。
      </para>
    </note>
    <tip>
      <para lang="en">
        When a plugin crashes, <acronym>GIMP</acronym> gives you a very
        ominous-looking message telling you that the plugin may have left
        <acronym>GIMP</acronym> in a corrupted state, and you should consider
        saving your images and exiting. Strictly speaking, this is quite
        correct, because plugins have the power to alter almost anything in
        <acronym>GIMP</acronym>, but for practical purposes, experience has
        shown that corruption is actually quite rare, and many users just
        continue working and don't worry about it. Our advice is that you
        simply think about how much trouble it would cause you if something
        went wrong, and weigh it against the odds.
      </para>
      <para lang="ja">
        プラグインが異常終了すると<acronym>GIMP</acronym>はあたかもその
        プラグインで壊れてしまったかのように言い、 画像を保存して一旦終了する
        ように促す非常に気味の悪いメッセージを出します。 厳密な意味では、
        プラグインには<acronym>GIMP</acronym>のほぼ全てを改変する能力があるので
        この指摘は決して間違いではありませんが、 実際的な面でみるとそういった
        破壊が起きた経験は事実上ほとんど無く、 気にせずそのまま作業を続ける人が
        大勢です。 私たちが申し上げたいのは、 何か問題が発生したときにどの程度
        の影響がご自身に及ぶかをちょっと考えて被害を推し量っていただきたいと
        いうことです。
      </para>
    </tip>
    <para lang="en">
      Because of the way plugins communicate with <acronym>GIMP</acronym>,
      they do not have any mechanism for being informed about changes you make
      to an image after the plugin has been started. If you start a plugin,
      and then alter the image using some other tool, the plugin will often
      crash, and when it doesn't will usually give a bogus result. You should
      avoid running more than one plugin at a time on an image, and avoid
      doing anything to the image until the plugin has finished working on it.
      If you ignore this advice, not only will you probably screw up the
      image, you will probably screw up the undo system as well, so that you
      won't even be able to recover from your foolishness.
    </para>
    <para lang="ja">
      プラグインと<acronym>GIMP</acronym>の通信方法には、 プラグインを実行
      している最中に画像の変更があってもそれを伝えるしくみがありません。
      プラグインを開始してから他のツールで画像に手を加えると、 プラグインが
      異常終了するのがほとんどで、 仮にそうならなくてもたいていは別物になり果て
      てしまいます。 画像に対し一度にひとつ以上のプラグインを走らせることの無い
      ようにすべきですし、 プラグインの動作が終了するまでは絶対に画像に手を
      つけてはいけません。 この忠告を無視した場合は画像がめちゃくちゃになるかも
      しれないばかりか、 操作履歴のシステムまでめちゃくちゃになるおそれがあり、
      過ちから挽回する手立てさえ失うことになりかねません。
    </para>
  </sect2>

  <sect2 id="gimp-plugins-install">
    <title lang="en">Installing New Plugins</title>
    <title lang="ja">新しいプラグインを導入</title>
    <indexterm lang="en">
      <primary>Plugins</primary>
      <secondary>Install</secondary>
    </indexterm>
    <indexterm lang="ja">
      <primary>プラグイン</primary>
      <secondary>導入</secondary>
    </indexterm>
    <para lang="en">
      The plugins that are distributed with <acronym>GIMP</acronym> don't
      require any special installation. Plugins that you download yourself do.
      There are several scenarios, depending on what OS you are using and how
      the plugin is structured. In Linux it is usually pretty easy to install
      a new plugin; in Windows, it is either easy or very hard. In any case,
      the two are best considered separately.
    </para>
    <para lang="ja">
      <acronym>GIMP</acronym>同梱のプラグインについては特別なインストール作業は
      全く必要ありません。 逆にご自身でダウンロードされたプラグインにはそれが
      必要です。 作業の順路はお使いの<acronym>OS</acronym>が何であるかや、
      プラグインの構成によっていくつかに分かれています。 <productname>Linux
      </productname> をはじめ <productname>UNIX</productname> 系のシステムなら
      新しいプラグインの導入は通常きわめて易しいものです。 <productname>Windows
      </productname> では簡単にできることもあれば非常に難しいこともあります。
      いずれにせよ最良と考えられている順路は2つあります。
    </para>
    <sect3>
      <title lang="en">Linux</title>
      <title lang="ja">UNIXクローン</title>
      <para lang="en">
        Most plugins fall into two categories: small ones whose source
        code is distributed as a single .c file, and larger ones whose
        source code is distributed as a directory containing multiple
        files including a <filename>Makefile</filename>.
      </para>
      <para lang="en">
        For a simple one-file plugin, call it <filename>borker.c</filename>,
        installing it is just a matter of running the command
        <command>gimptool-2.0 --install borker.c</command>.   This command
        compiles the plugin and installs it in your personal plugin directory,
        <filename>~/.gimp-2.6/plugins</filename> unless you have changed it.
        This will cause it to be loaded automatically the next time you start
        <acronym>GIMP</acronym>. You don't need to be root to do these things;
        in fact, you shouldn't be. If the plugin fails to compile, well, be
        creative.
      </para>
      <para lang="en">
        Once you have installed the plugin, how do you activate it? The menu
        path is determined by the plugin itself, so to answer this you need to
        either look at the documentation for the plugin (if there is any), or
        launch the Plugin Description dialog (from Xtns/Plugins Details)
        search the plug-in by its name and look of the
        <guilabel>Tree view</guilabel>
        tab. If you still don't find, finally explore the menus or look at the
        source code in the Register section -- whichever is easiest.
      </para>
      <para lang="en">
        For more complex plugins, organized as a directory with multiple
        files, there ought to be a file inside called either
        <filename>INSTALL</filename> or <filename>README</filename>, with
        instructions. If not, the best advice is to toss the plugin in the
        trash and spend your time on something else:  any code written with so
        little concern for the user is likely to be frustrating in myriad
        ways.
      </para>
      <para lang="en">
        Some plugins (specifically those based on the <acronym>GIMP</acronym>
        Plugin Template) are designed to be installed in the main system
        <acronym>GIMP</acronym> directory, rather than your home directory.
        For these, you will need to be root to perform the final stage of
        installation (when issuing the <command>make install</command>
        command).
      </para>
      <para lang="en">
        If you install in your personal plugin directory a plugin that has the
        same name as one in the system plugin directory, only one can be
        loaded, and it will be the one in your home directory. You will
        receive messages telling you this each time you start
        <acronym>GIMP</acronym>. This is probably a situation best avoided.
      </para>
      <para lang="ja">
        大多数のプラグインは2つに分類できます。 片や配布されるソースコードは
        たったひとつの <filename>.c</filename> ファイルだけのものと、 対して
        <filename>Makefile</filename> を含め複数のファイルを収めたディレクトリ
        からなる配布形態をとる大きなものです。
      </para>
      <para lang="ja">
        例えば <filename>borker.c</filename> と名付けられた単一ファイルの
        プラグインがあるとすると、 導入作業に必要なのは <userinput><command>
        gimptool-2.0</command> <option>--install</option> <filename>borker.c
        </filename></userinput> というコマンドを走らせることだけです。
        このコマンドでプラグインのコンパイルが行われ、 個人用プラグインの
        ディレクトリ (初期設定どおりなら <filename>~/.gimp-2.6/plugins/
        </filename> ) にインストールされます。
        これで次回の<acronym>GIMP</acronym>起動時よりこのプラグインが自動的に
        読み込まれるようになります。 この作業はルートになる必要がありません。
        むしろなってはいけません。 ところでもしもプラグインのコンパイルに失敗
        してしまっても、 これを前向きにとらえて創造的になりましょう。
      </para>
      <para lang="ja">
        プラグインのインストールができたとして、 どうすれば呼び出せるの
        でしょう。 どこのメニューに入るかはプラグイン自身が決定しますので、
        その答えはプラグイン付属の文書 (もしあればの話です) を読むか、
        メニューより
        <menuchoice>
          <guimenu>ヘルプ(<accel>H</accel>)</guimenu>
          <guimenuitem>プラグインブラウザ(<accel>P</accel>)</guimenuitem>
        <menuchoice>
        と進んで<quote>プラグインブラウザ</quote>を開き、 プラグインの名前で
        <guilabel>検索(<accel>S</accel>)</guilabel> して <guilabel>ツリー表示
        </guilabel> のタブをご覧になって得てください。 それでも依然として分か
        らない場合は、 メニューをしらみつぶしに探すかソースコードの登録動作部分
        (例えば <function>gimp_install_procedure</function>) を見付けるか
        のどちらか簡単な方をするしかもう成す術がありません。
      </para>
      <para lang="ja">
        複雑なプラグインともなると複数のファイルがディレクトリ内にまとめられて
        おり、 その扱い方を記載した <filename>INSTALL</filename> もしくは
        <filename>README</filename> というファイルがあるはずです。 もしなければ
        そのようなプラグインは即刻ごみ箱に放り込んで時間を節約するほうがよいと
        心からご忠告いたします。 どんなコードもユーザに対する思い遣りを欠いて
        書かれれば無数の失望を買うようなものです。
      </para>
      <para lang="ja">
        プラグインのなかには (とくに<acronym>GIMP</acronym>プラグイン用雛形を
        もとに作成されたものは) <acronym>GIMP</acronym>の個人用ディレクトリでは
        なくシステム用のディレクトリに導入することを前提にしています。 これら
        においては最後の導入の段階 (つまり <command>make install</command>
        を実行する段階) でルートになって作業する必要があるでしょう。
      </para>
      <para lang="ja">
        個人用のプラグインディレクトリに入れる場合で、 そのプラグインの名前と
        同じものがシステムディレクトリにあると、 読み込まれるのはひとつだけ、
        ホームディレクトリにある方になります。 このことを<acronym>GIMP</acronym>
        は起動時に毎回知らせてくるはずです。 このような状況は避けたほうが
        よいでしょう。
      </para>
    </sect3>

    <sect3>
      <title>Windows</title>
      <para lang="en">
        Windows is a much more problematic environment for building software
        than Linux. Every decent Linux distribution comes fully supplied with
        tools for compiling software, and they are all very similar in the way
        they work, but Windows does not come with such tools. It is possible
        to set up a good software-building environment in Windows, but it
        requires either a substantial amount of money or a substantial amount
        of effort and knowledge.
      </para>
      <para lang="en">
        What this means in relation to <acronym>GIMP</acronym> plugins is the
        following: either you have an environment in which you can build
        software, or you don't. If you don't, then your best hope is to find a
        precompiled version of the plugin somewhere (or persuade somebody to
        compile it for you), in which case you simply need to put it into your
        personal plugin directory. If you do have an environment in which you
        can build software (which for present purposes means an environment in
        which you can build <acronym>GIMP</acronym>), then you no doubt
        already know quite a bit about these things, and just need to follow
        the Linux instructions.
      </para>
      <para lang="en">
        If you would like to set up a build environment, and are ready for the
        heroism involved, you can find a reasonably recent description of how
        to go about it in the <acronym>GIMP</acronym> Wiki, at
        HowToCompileGimp/MicrosoftWindows
        <xref linkend="bibliography-online-gimp-wiki-compile-windows"/>.
        Since it is a Wiki, anybody is free to edit it, so please keep it up
        to date by adding advice based on your own experiences.
      </para>
      <para lang="ja">
        <productname>Windows</productname> は <productname>UNIX</productname>
        系のシステムと比べるとソフトウェアを構築するには随分と問題の多い環境
        です。 たとえば適切な <productname>Linux</productname>
        ディストリビューションならばいずれもコンパイル関係のツールが一式揃って
        いて、 その動作の状況はどれも非常によく似ているのに対し、 <productname>
        Windows</productname> にはそういったツールが一切付いてきません。
        <productname>Windows</productname> でもソフトウェア構築の良好な環境を
        整えることは可能ですが、 それにはかなり多額の費用をかけるか、 もしくは
        たいへんな努力と知識を積む必要があります。
      </para>
      <para lang="ja">
        このことが<acronym>GIMP</acronym>プラグインと関わるとどういう意味がある
        かを、 ソフトウェア構築の環境が整っている場合とない場合に分けて見て
        ゆきましょう。 コンパイル環境がない場合はコンパイル済みのプラグイン
        ソフトウェアを探す (もしくは誰かに頼んでコンパイルしてもらう) ことに
        なります。 そのあとは個人用のプラグインディレクトリに収めれば完了です。
        ソフトウェア構築環境 (その目的からして<acronym>GIMP</acronym>をビルド
        できる環境とも言えます) がある場合には、 こういったことは既にかなりご
        存知のはずですから、 UNIX系の方法に従っていただくだけで十分です。
      </para>
      <para lang="ja">
        構築環境の設営をしようとお考えでしかもその渦中に飛び込む勇気と覚悟を
        お持ちならば、 <acronym>GIMP</acronym> Wiki の
        HowToCompileGimp/MicrosoftWindows のページ
        <xref linkend="bibliography-online-gimp-wiki-compile-windows"/>
        をご覧になればそのやり方について適度に最新の記述が読めます。 もちろん
        これは Wiki なので誰でも自由に編集できますから、 是非ともあなたの経験に
        基づくアドバイスを書き加えて、 最新情報を保つことにご協力していただき
        たく思います。
      </para>
    </sect3>

    <sect3>
      <title>Apple Mac OS X</title>
      <para lang="en">
        How you install plugins on OS X mostly depends on how you installed
        GIMP itself. If you were one of the brave and installed GIMP
        through one of the package managers like fink
        <xref linkend="bibliography-online-darwinports"/> or darwinports,
        <xref linkend="bibliography-online-fink"/> the
        plugin installation works exactly the way it is described for the
        Linux platform already. The only difference is, that a couple of
        plugins might be even available in the repository of your package
        manager, so give it a try.
      </para>
      <para lang="en">
        If you on the other hand are one of the Users that preferred to grab a
        prebuild GIMP package like GIMP.app, you most probably want to stick
        to that prebuild stuff. So you can try to get a prebuild version of
        the plugin of your dreams from the author of the plugin, but I'd not
        want to bet on this. Building your own binaries unfortunately involves
        installing GIMP through one of the package managers mentioned above.
      </para>
      <para lang="ja">
        プラグインを OS X にインストールする方法はどのように<acronym>GIMP
        </acronym>自身をインストールしたかにかなり依存します。 もし darwinports
        <xref linkend="bibliography-online-darwinports"/> や fink
        <xref linkend="bibliography-online-fink"/> のようなパッケージマネージャ
        を通じて<acronym>GIMP</acronym>を導入する勇者の仲間に入るつもりならば、
        プラグインの導入はまさに既にUNIX系の説明で述べた方法でできます。 たった
        ひとつの違いは、 パッケージマネージャのレポジトリでもプラグインが2つ
        手に入るということですので、 試してみてはいかかでしょうか。
      </para>
      <para lang="ja">
        それとは逆にGIMP.appのような一発インストールが可能な<acronym>GIMP
        </acronym>パッケージを好むユーザならば恐らくコンパイル済みのもの一本に
        絞りたいのではないかと思います。 つまりプラグインの作者からコンパイル
        済みのパッケージを入手できたらとの考えではないかと思うわけですが、
        この方法には賛成しかねます。 先に触れたパッケージマネージャがバイナリ
        実行ファイルをビルドする際に<acronym>GIMP</acronym>のインストールも
        実施するはめになるからです。<!--脈絡断絶？-->
      </para>
    </sect3>
  </sect2>

  <sect2 id="plugins-write">
    <title lang="en">Writing Plugins</title>
    <title lang="ja">プラグインを記述</title>
    <indexterm lang="en">
      <primary>Plugins</primary>
      <secondary>Write</secondary>
    </indexterm>
    <indexterm lang="ja">
      <primary>プラグイン</primary>
      <secondary>記述</secondary>
    </indexterm>
    <para lang="en">
      If you want to learn how to write a plugin, you can find plenty of help
      at the <acronym>GIMP</acronym> Developers web site
      <xref linkend="bibliography-online-gimp-dev-plugin"/>.
      <acronym>GIMP</acronym> is a complex
      program, but the development team has made strenuous efforts to flatten
      the learning curve for plugin writing:  there are good instructions and
      examples, and the main library that plugins use to interface with
      <acronym>GIMP</acronym> (called <quote>libgimp</quote>) has a
      well-documented <acronym>API</acronym>.  Good programmers, learning by
      modifying existing plugins, are often able to accomplish interesting
      things after just a couple of days of work.
    </para>
    <para lang="ja">
      プラグインの書き方を学ぶ際に<acronym>GIMP</acronym>の開発者用ウェブサイト
      <xref linkend="bibliography-online-gimp-dev-plugin"/>
      (英語) をご覧になれば豊富な手掛かりがつかめます。 <acronym>GIMP</acronym>
      は複雑なプログラムですが、 開発チームはプラグインが書けるまでに学ぶべき
      ことの壁ができるだけなだらかになるように奮闘しています。 既に優れたてびき
      や例がありますし、 プラグインが<acronym>GIMP</acronym>と交信するための
      ライブラリ (<quote>libgimp</quote>といいます) には十分に文書化された
      <acronym>API</acronym>があります。 優れたプログラマは既にあるプログラムを
      改変するところから学び、 ほんの一両日中のうちに何か面白いことができて
      しまう場合が少なくありません。
    </para>
  </sect2>
</sect1>
