<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect2 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
                       "http://www.docbook.org/xml/4.3/docbookx.dtd">
<!-- section history:
  2009-08-24 ude: moved to filters/ an changed id
   2008-06-07 ude: added new sections: Refresh, Console, Server
   2005-11-24 split of from menus-toolbox.xml by axel.wernicke
-->
<!--2012-06-02-->
<sect2 id="gimp-filters-script-fu">
  <title lang="en">The <quote>Script-Fu</quote> Submenu</title>
  <title lang="ja"><quote>Script-Fu</quote>サブメニュー</title>

  <indexterm lang="en">
    <primary>Script-Fu</primary>
    <secondary>Sub-menu</secondary>
  </indexterm>
  <indexterm lang="ja">
    <primary>Script-Fu</primary>
    <secondary>サブメニュー</secondary>
  </indexterm>

  <figure>
    <title lang="en">The <quote>Script-Fu</quote> submenu</title>
    <title lang="ja"><quote>Script-Fu</quote>サブメニュー</title>
    <mediaobject>
      <imageobject>
        <imagedata format="PNG" fileref="images/menus/filters/script-fu.png"/>
      </imageobject>
    </mediaobject>
  </figure>
  <para lang="en">
    This  submenu contains some Script-Fu commands, especially the Script-Fu
    console. <link linkend="gimp-concepts-script-fu">Script-Fu</link> is a
    language for writing scripts, which allow you to run a series of
    <acronym>GIMP</acronym> commands automatically.
    <!--
        These scripts create a new image: they are
        <link linkend="standalone-script-fu">stand-alone scripts</link>.
        -->
  </para>
  <para lang="ja">
    <guisubmenu>Script-Fu</guisubmenu> サブメニューには
    Script-Fu コンソールをはじめ Script-Fu 関連のコマンドが入っています。 
    <link linkend="gimp-concepts-script-fu">Script-Fu</link> は
    <acronym>GIMP</acronym>のコマンドを自動的に実行させるスクリプトを
    書くための言語の一種です。
  </para>
  <sect3>
    <title lang="en">Activating the submenu</title>
    <title lang="ja">サブメニューへの入り方</title>
    <itemizedlist>
      <listitem>
        <para lang="en">
          You can access this command from the image menu through
          <menuchoice>
            <guimenu>Filters</guimenu>
            <guimenuitem>Script-Fu</guimenuitem>
          </menuchoice>
        </para>
        <para lang="ja">
          画像ウィンドウのメニューより
          <menuchoice>
            <guimenu>フィルター</guimenu>
            <guisubmenu>Script-Fu</guisubmenu>
          </menuchoice>
        </para>
      </listitem>
    </itemizedlist>
  </sect3>

  <sect3 id="script-fu-refresh">
    <title lang="en">Refresh Scripts</title>
    <title lang="ja">スクリプトを再読み込み</title>
    <para lang="en">
      You will need this command every time you add, remove, or change a
      Script-Fu script. The command causes the Script-Fus to be reloaded and
      the menus containing Script-Fus to be rebuilt from scratch. If you
      don't use this command, <acronym>GIMP</acronym> won't notice your
      changes until you start it again.
    </para>
    <para lang="en">
      Note that you won't get any feedback, unless saving, if one of your
      scripts failes.
    </para>
    <para lang="ja">
      Script-Fu スクリプトを追加や削除や変更するときにはいつもこのコマンドが
      必要になることでしょう。 このコマンドを実行すると Script-Fu ファイルが
      読み込み直され、 Script-Fu のメニュー項目を含んでいるメニューは頭から
      構築し直されます。 <acronym>GIMP</acronym>は一旦スクリプトを読み込んで
      しまうとスクリプトの内容が変更されても<acronym>GIMP</acronym>を
      再起動するまでは感知しないため、 このコマンドを実行しない限り
      スクリプトの変更を反映できません。
    </para>
    <para lang="ja">
      ちなみにひとつでもスクリプトに間違いがあると、 保存できていなければ
      フィードバックが何も得られません。<!--XXX-->
    </para>
  </sect3>

  <sect3 id="plug-in-script-fu-console">
    <title lang="en">Script-Fu Console</title>
    <title lang="ja">Script-Fu コンソール</title>
    <para lang="en">
      The Script-Fu console is a dialog window where you can interactively
      test Scheme commands.
    </para>
    <para lang="en">
      The console consists of a large scrollable main window for output and a
      textbox used to type Scheme commands. When you type a Scheme statement
      and then press the <keycap>Enter</keycap> key, the command and its
      return value will be displayed in the main window.
    </para>
    <para lang="ja">
      Script-Fu コンソールは Scheme 言語のコマンドを対話的に試すのに使えます。
    </para>
    <para lang="ja">
      このコンソールには繰り寄せ可能な大きなウィンドウがあり、 その下にある
      一行入力欄から送られたコマンドの出力が表示されます。 この欄に Scheme 式
      命令文を記入して <keycap>Enter</keycap> キーを押すと、 命令文と返された
      値が上のウィンドウに表示されます。
    </para>
    <figure>
      <title lang="en">Script-Fu Console</title>
      <title lang="ja">Script-Fu コンソール</title>
      <mediaobject>
        <imageobject>
          <imagedata format="PNG"
            fileref="images/menus/filters/script-fu-console.png"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para lang="en">
      You will find more information about
      <link linkend="gimp-using-script-fu-tutorial-scheme">Scheme</link> and
      examples how to use the
      <link linkend="gimp-using-script-fu-tutorial-console">Script-Fu
      console</link> in <xref linkend="gimp-using-script-fu-tutorial"/>.
    </para>
    <para lang="ja">
      <link linkend="gimp-using-script-fu-tutorial-scheme">Scheme</link> の
      詳しい案内や
      <xref linkend="gimp-using-script-fu-tutorial"/> での
      <link linkend="gimp-using-script-fu-tutorial-console">Script-Fu 
      コンソール</link> の使い方の例もご覧ください。
    </para>
    <variablelist>
      <title lang="en">The Script-Fu Console Buttons</title>
      <title lang="ja">Script-Fu コンソールのボタン</title>
      <varlistentry>
        <term lang="en">Browse</term>
        <term lang="ja">参照...</term>
        <listitem>
          <para lang="en">
            This button is next to the Scheme commands textbox. When
            clicked, the
            <link linkend="plug-in-dbbrowser">procedure browser</link> pops
            up, with an additional button at the bottom of the window:
          </para>
          <para lang="ja">
            <guibutton>参照</guibutton> ボタンは Scheme 命令の
            記入欄の右隣にあります。 クリックすると 
            <link linkend="plug-in-dbbrowser">プロシージャーブラウザー</link> が
            開かれます。 プロシージャーブラウザーには 
            <guibutton>適用</guibutton> ボタンがついています。
          </para>
          <mediaobject>
            <imageobject>
              <imagedata format="PNG"
             fileref="images/menus/filters/procedure-browser-apply-button.png"/>
            </imageobject>
            <caption>
              <para lang="en">
                The additional button of the Procedure Browser
              </para>
              <para lang="ja">
                プロシージャーブラウザーから取り込むためのボタン
              </para>
            </caption>
          </mediaobject>
          <para lang="en">
            When you press this <guibutton>Apply</guibutton> button in the
            procedure browser, the selected procedure will be pasted into the
            text box:
          </para>
          <para lang="ja">
            プロシージャーブラウザーの <guibutton>適用</guibutton> ボタンを
            クリックすると、 ブラウザーで選択した手続き命令のコードが
            コンソールの Scheme 命令記入欄に貼り付けられます。
          </para>
          <mediaobject>
            <imageobject>
              <imagedata format="PNG"
           fileref="images/menus/filters/script-fu-console-browse-applied.png"/>
            </imageobject>
            <caption>
              <para lang="en">
                Applied
                <link linkend="glossary-pdb"><acronym>PDB</acronym></link>
                procedure
              </para>
              <para lang="ja">
                取り込まれた
                <link linkend="glossary-pdb"><acronym>PDB</acronym></link>
                手続き命令 (プロシージャー)
              </para>
            </caption>
          </mediaobject>
          <para lang="en">
            Now you just have to replace the parameter names (here:
            <quote>layer</quote> and <quote>mode</quote>) with actual values,
            and then you can call the procedure by pressing
            <keycap>Enter</keycap>.
          </para>
          <para lang="ja">
            そうしたらもうパラメーターの名前 (上図の例では<quote>layer</quote>と
            <quote>mode</quote>) を値に置き換えるだけで、 あとは 
            <keycap>Enter</keycap> を押せばよいのです。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term lang="en">Close</term>
        <term lang="ja">閉じる</term>
        <listitem>
          <para lang="en">
            Pressing this button closes the  Script-Fu console.
          </para>
          <para lang="ja">
            <guibutton>閉じる</guibutton> ボタンをクリック
            すると Script-Fu コンソールを閉じます。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <!-- gtk/gtkstock.c:329 -->
        <term lang="en">Clear</term>
        <term lang="ja">クリア</term>
        <listitem>
          <para lang="en">
            Wenn you click on this button, the content of the main window will
            be removed. Note that you can't get back the removed content using
            the <guilabel>Save</guilabel> command.
          </para>
          <para lang="ja">
            <guibutton>
              <inlinegraphic format="PNG"
                fileref="images/dialogs/stock-edit-clear-16.png"/>
                クリア
            </guibutton>
            ボタンをクリックすると、 主ウィンドウ部分から現在のコマンド出力の
            表示が消えます。 ちなみにコンソール出力に表示された内容は
            <guibutton>
              <inlinegraphic format="PNG"
                fileref="images/dialogs/stock-save-16.png"/>
                保存
            </guibutton>
            していても一旦クリアすると復元ができません。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term lang="en">Save</term>
        <term lang="ja">保存</term>
        <listitem>
          <para lang="en">
            This command lets you save the content of the main window, that is
            the Script-Fu console output (including the
            <quote><code>&gt;</code></quote>-characters).
          </para>
          <para lang="ja">
            <guibutton>
              <inlinegraphic format="PNG"
                fileref="images/dialogs/stock-save-16.png"/>
                保存
            </guibutton>
            コマンドは主ウィンドウ、 つまり Script-Fu の出力表示の内容を
            そっくりそのまま (エコーバック行の<quote><code>&gt;</code></quote>
            記号も含め) テキスト形式のファイルとして保存します。 ボタンを
            クリックするとファイルブラウザーが開かれますので保管場所と
            ファイル名を指定してください。
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect3>

  <sect3 id="plug-in-script-fu-server">
    <title lang="en">Start Server</title>
    <title lang="ja">サーバースタート...</title>
    <para lang="en">
      This command will start a server, which reads and executes Script-Fu
      (Scheme) statements you send him via a specified port.
    </para>
    <para lang="ja">
      <guimenuitem>サーバースタート...</guimenuitem> コマンドは
      サーバープログラムを起動します。 起動時に指定したポートを介してサーバーに
      Script-Fu 命令 (Scheme 言語のコード) を送ると解釈され実行されます。
    </para>
    <figure>
      <title lang="en">The Script-Fu Server Options</title>
      <title lang="ja">Script-Fu サーバーオプション</title>
      <mediaobject>
        <imageobject>
          <imagedata format="PNG"
            fileref="images/menus/filters/script-fu-server.png"/>
        </imageobject>
      </mediaobject>
    </figure>
    <variablelist>
      <varlistentry>
        <term lang="en">Server Port</term>
        <term lang="ja">サーバーポート</term>
        <listitem>
          <para lang="en">
            The port number where the Script-Fu server will listen. It is
            possible to start more than one server, specifying different port
            numbers, of course.
          </para>
          <para lang="ja">
            この番号のポートを介し Script-Fu サーバーが送受信します。 
            サーバーは複数起動させることも可能ですが、 もちろん互いに異なる
            ポート番号を指定しなければなりません。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term lang="en">Server Logfile</term>
        <term lang="ja">サーバーログファイル</term>
        <listitem>
          <para lang="en">
            Optionally you can specify the name of a file the server will use
            to log informal and error messages. If no file is specified,
            messages will be written to stdout.
          </para>
          <para lang="ja">
            必須ではありませんがここでファイル名を指定するとサーバーが発する
            不正や事故のメッセージがそのファイルに書き込まれます。 ファイル名を
            指定しない場合はメッセージが標準出力に送られます。
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <itemizedlist>
      <title lang="en">The Script-Fu Server Protocol</title>
      <title lang="ja">Script-Fu サーバーのプロトコル</title>
      <para lang="en">
        The protocol used to communicate with the Script-Fu server is very
        simple:
      </para>
      <para lang="ja">
        Script-Fu サーバーと交信するためのプロトコルはとても単純です。
      </para>
      <listitem>
        <para lang="en">
          Every message (Script-Fu statement) of length <code>L</code> sent to
          the server has to be preceded with the following 3 bytes:
        </para>
        <para lang="ja">
          サーバーに送るメッセージ (Script-Fu 命令文) にはいずれもその文字列の
          長さ <code>L</code> を含むつぎのような 3 バイトを頭に付加します。
        </para>
        <table>
          <title lang="en">Header format for commands</title>
          <title lang="ja">コマンドのヘッダー部の形式</title>
          <tgroup cols="3">
            <thead>
              <row lang="en">
                <entry>Byte #</entry>
                <entry>Content</entry>
                <entry>Description</entry>
              </row>
              <row lang="ja">
                <entry>バイト順</entry>
                <entry>内容</entry>
                <entry>意味</entry>
              </row>
            </thead>
            <tbody>
              <row lang="en">
                <entry>0</entry>
                <entry>0x47</entry>
                <entry>Magic byte ('G')</entry>
              </row>
              <row lang="en">
                <entry>1</entry>
                <entry>L div 256</entry>
                <entry>High byte of <code>L</code></entry>
              </row>
              <row lang="en">
                <entry>2</entry>
                <entry>L mod 256</entry>
                <entry>Low byte of <code>L</code></entry>
              </row>
              <row lang="ja">
                <entry>0</entry>
                <entry>0x47</entry>
                <entry>マジックバイト ('G')</entry>
              </row>
              <row lang="ja">
                <entry>1</entry>
                <entry>L div 256</entry>
                <entry><code>L</code> の高位バイト</entry>
              </row>
              <row lang="ja">
                <entry>2</entry>
                <entry>L mod 256</entry>
                <entry><code>L</code> の低位バイト</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </listitem>
      <listitem>
        <para lang="en">
          Every response from the server (return value or error message) of
          length <code>L</code> will be preceded with the following 4 bytes:
        </para>
        <para lang="ja">
          サーバーが返すメッセージ (返し値もしくはエラーメッセージ) にはいずれも
          その文字列の長さ <code>L</code> を含むつぎのような 4 バイトが
          付加されています。
        </para>
        <table>
          <title lang="en">Header format for responses</title>
          <title lang="ja">返し値のヘッダー部の形式</title>
          <tgroup cols="3">
            <thead>
              <row lang="en">
                <entry>Byte #</entry>
                <entry>Content</entry>
                <entry>Description</entry>
              </row>
              <row lang="ja">
                <entry>バイト順</entry>
                <entry>内容</entry>
                <entry>意味</entry>
              </row>
            </thead>
            <tbody>
              <row lang="en">
                <entry>0</entry>
                <entry>0x47</entry>
                <entry>Magic byte ('G')</entry>
              </row>
              <row lang="en">
                <entry>1</entry>
                <entry>error code</entry>
                <entry>0 on success, 1 on error</entry>
              </row>
              <row lang="en">
                <entry>2</entry>
                <entry>L div 256</entry>
                <entry>High byte of <code>L</code></entry>
              </row>
              <row lang="en">
                <entry>3</entry>
                <entry>L mod 256</entry>
                <entry>Low byte of <code>L</code></entry>
              </row>
              <row lang="ja">
                <entry>0</entry>
                <entry>0x47</entry>
                <entry>マジックバイト ('G')</entry>
              </row>
              <row lang="ja">
                <entry>1</entry>
                <entry>エラー判別</entry>
                <entry>0 は成功。 1 は事故。</entry>
              </row>
              <row lang="ja">
                <entry>2</entry>
                <entry>L div 256</entry>
                <entry><code>L</code> の高位バイト</entry>
              </row>
              <row lang="ja">
                <entry>3</entry>
                <entry>L mod 256</entry>
                <entry><code>L</code> の低位バイト</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </listitem>
    </itemizedlist>
    <tip>
      <para lang="en">
        If you don't want to get your hands dirty: there is a Python script
        named <application>servertest.py</application> shipped with the
        <acronym>GIMP</acronym> source code, which you can use as a simple
        command line shell for the Script-Fu server.
      </para>
      <para lang="ja">
        面倒くさそうですか? それなら<acronym>GIMP</acronym>のソースコードに
        含まれている <filename>servertest.py</filename> という名前の Python 
        スクリプトはいかがでしょう。 これは Script-Fu サーバーと交信できる
        単純なコマンドライン端末用プログラムです。
      </para>
    </tip>
  </sect3>
</sect2>
