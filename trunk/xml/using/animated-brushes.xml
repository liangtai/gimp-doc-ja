<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
                       "http://www.docbook.org/xml/4.3/docbookx.dtd">
<!-- section history:
  2009-09-23 ude: fixed bug #573267 (Angular selection: clockwise)
  2009-09-23 j.h: reviewed for v2.6
  2007-05-08 Added Spanish translation by AntI
-->
<!--2010-01-17-->
<sect1 id="gimp-using-animated-brushes">
  <title lang="en">The GIH Dialog Box</title>
  <title lang="ja">GIHダイアログ</title>
  <indexterm lang="en">
    <primary>Animation</primary>
    <secondary>Creating an animated brush</secondary>
  </indexterm>
  <indexterm lang="ja">
    <primary>アニメーション</primary>
    <secondary sortas="アニメーションブラシノサクセイ">
      アニメーションブラシの作成
    </secondary>
  </indexterm>

  <para lang="en">
    When your new animated brush is created, it is displayed within the image
    window and you would like save it into a gih format. You select
    <menuchoice>
      <guimenu>File</guimenu>
      <guimenuitem>Save as...</guimenuitem>
    </menuchoice>
    menu, name your work with the gih extension in the new window relevant
    field and as soon as you pressed the Save button, the following window is
    displayed:
  </para>
  <para lang="ja">
    アニメーションするブラシができたなら、 それを画像ウィンドウで表示したうえで
    <acronym>GIH</acronym>形式で保存することになります。 画像ウィンドウの
    メニューより
    <menuchoice>
      <guimenu>ファイル</guimenu>
      <guimenuitem>名前を付けて保存...</guimenuitem>
    </menuchoice>
    するときに拡張子 <filename class="extension">.gih</filename> をファイル名に
    付けてから、<guibutton>保存</guibutton> ボタンをクリックすると
    下図のようなウィンドウが現れます。
  </para>

  <figure>
    <title lang="en">The dialog to describe the animated brush</title>
    <title lang="ja">アニメーションするブラシの構成を記述するダイアログ</title>
    <mediaobject>
      <imageobject>
        <imagedata format="PNG"
          fileref="images/using/file-gih-save.png"/>
      </imageobject>
      <caption>
        <para lang="en">
          This dialog box shows up, if you save an image as GIMP image hose
        </para>
        <para lang="ja">
          <acronym>GIMP</acronym>ブラシパイプ形式の画像を保存する際に
          現れるダイアログ
        </para>
      </caption>
    </mediaobject>
  </figure>

  <para lang="en">
    This dialog box has several options not easy to understand. They allow you
    to determine the way your brush is animated.
  </para>
  <para lang="ja">
    このダイアログウィンドウのオプションはわかりにくそうですが、
    これらはブラシをアニメーションさせるために必要な指定項目です。
  </para>
  <variablelist>
    <varlistentry>
      <term lang="en">Spacing (Percent)</term>
      <term lang="ja">間隔 (パーセント)</term>
      <listitem>
        <para lang="en">
          <quote>Spacing</quote> is the distance between consecutive brush
          marks when you trace out a brushstroke with the pointer. You must
          consider drawing with a brush, whatever the paint tool, like
          stamping. If Spacing is low, stamps will be very close and stroke
          look continuous. If spacing is high, stamps will be separated:
          that's interesting with a color brush (like <quote>green
          pepper</quote> for instance). Value varies from 1 to 200 and this
          percentage refers to brush <quote>diameter</quote>: 100% is one
          diameter.
        </para>
        <para lang="ja">
          <quote>間隔</quote>とはポインタでなぞった描線上に並べられるブラシの
          刻印の互いの間隔のことです。 これはどんな描画ツールであっても、
          ブラシをスタンプのように考えてください。 間隔が狭い場合はそのスタンプ
          が互いに近づいて重なるので連続した描線に見えます。 逆に間隔が広い場合
          はスタンプが離れて並びます。 その良さは色ものブラシ
          (<quote>ピーマン</quote>みたいなもの) でわかります。 この値はブラシの
          <quote>直径</quote>を基底とする 1% から 200% までの範囲で指定
          できます。 100% がブラシの刻印ひとつぶんです。
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term lang="en">Description</term>
      <term lang="ja">説明</term>
      <listitem>
        <para lang="en">
          It's the brush name that will appear at the top of Brush Dialog
          (grid mode) when the brush is selected.
        </para>
        <para lang="ja">
          これはブラシにつける名前を記入するところで、 ブラシダイアログ上では
          <guimenuitem>一覧で表示</guimenuitem> モードなら各
          ブラシの右側に、 <guimenuitem>並べて表示
          </guimenuitem> モードならば選ばれたブラシについてのみダイアログの
          上部に表示されます。
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term lang="en">Cell Size</term>
      <term lang="ja">セルサイズ</term>
      <listitem>
        <para lang="en">
          That's size of cells you will cut up in layers... Default is one
          cell per layer and size is that of the layer. Then there is only
          one brush aspect per layer.
        </para>
        <para lang="en">
          We could have only one big layer and cut up in it the cells that
          will be used for the different aspects of the animated brush.
        </para>
        <para lang="en">
          For instance, we want a 100x100 pixels brush with 8 different
          aspects. We can take these 8 aspects from a 400x200 pixels layer,
          or from a 300x300 pixels layer but with one cell unused.
          On a layer, layout the former as
          <simplelist type="horiz" columns="4">
          <member>1</member> <member>2</member> <member>3</member>
          <member>4</member> <member>5</member> <member>6</member>
          <member>7</member> <member>8</member>
          </simplelist>,
          the latter as
          <simplelist type="horiz" columns="3">
          <member>1</member> <member>2</member> <member>3</member>
          <member>4</member> <member>5</member> <member>6</member>
          <member>7</member> <member>8</member>
          </simplelist>.
        </para>
        <para lang="ja">
          これはブラシ画像のレイヤーから切り出すセル (小区画) の大きさを
          決めます。 初期値はセルの大きさがレイヤーと同じになり、 つまりレイヤー
          あたりのセル数は1つです。 ちなみにその場合はレイヤー1層にブラシ相が
          1つある設定になります。
        </para>
        <para lang="ja">
          たった1層の大きなレイヤーを細かくセルに分けて、 アニメーションする
          ブラシの様々な相に割り当てることが可能です。
        </para>
        <para lang="ja">
          例えば、 大きさが 100&times;100 ピクセルで8つの相 (変化形) からなる
          ブラシを作るとします。 この8相を 400&times;200 ピクセルのレイヤーに
          振り分けてもよいですし、 300&times;300 ピクセルのレイヤーを用意して
          1セル余らせる方法もあります。 前者は
          <simplelist type="horiz" columns="4">
          <member>1</member> <member>2</member> <member>3</member>
          <member>4</member> <member>5</member> <member>6</member>
          <member>7</member> <member>8</member>
          </simplelist>
          の順に、 後者は
          <simplelist type="horiz" columns="3">
          <member>1</member> <member>2</member> <member>3</member>
          <member>4</member> <member>5</member> <member>6</member>
          <member>7</member> <member>8</member>
          </simplelist>
          の順にセル上で並べます。
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term lang="en">Number of cells</term>
      <term lang="ja">セル数</term>
      <listitem>
        <para lang="en">
          That's the number of cells (one cell per aspect) that will be cut
          in every layer. Default is the number of layers as there is only
          one layer per aspect.
        </para>
        <para lang="ja">
          これはレイヤー1層あたりのセル数を定めます。 1つの相に1個のセルが必要
          です。 既定では1つの相に1層だけレイヤーがあるとみなすので
          初期値はレイヤーの数と同じになります。
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term lang="en">Display as</term>
      <term lang="ja">表示方法</term>
      <listitem>
        <para lang="en">
          This tells how cells have been arranged in layers. If, for example,
          you have placed height cells at the rate of two cells per layer on
          four layers, GIMP will display:
          <computeroutput>1 rows of 2 columns on each layer</computeroutput>.
        </para>
        <para lang="ja">
          この表示はセルをレイヤーに配置する様子です。 例えばもし4層の
          レイヤーを使ってそれぞれに高さセルを2つ置く割合にすると、 この表示は
          <computeroutput>1行2列(各レイヤー)</computeroutput> となるでしょう。
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term lang="en">Dimension, Ranks, Selection</term>
      <term lang="ja">次元; 並び; 及び選択モード</term>
      <listitem>
        <para lang="en">
          There things are getting complicated! Explanations are necessary to
          understand how to arrange cell and layers.
        </para>
        <para lang="en">
          GIMP starts retrieving cells from each layer and stacks them into a
          FIFO stack (First In First Out: the first in is at the top of the
          stack and so can be first out). In our example 4 layers with 2 cells
          in each, we'll have, from top to bottom: first cell of first layer,
          second cell of first layer, first cell of second layer, second cell
          of second layer..., second cell of fourth layer. With one cell per
          layer or with several cells per layer, result is the same. You can
          see this stack in the Layer Dialog of the resulting
          <filename class="extension">.gih</filename> image file.
        </para>
        <para lang="en">
          Then GIMP creates a computer array from this stack with the
          <guilabel>Dimensions</guilabel>
          you have set. You can use four dimensions.
        </para>
        <para lang="en">
          In computer science an array has a <quote>myarray(x,y,z)</quote>
          form for a 3 dimensions array (3D). It's easy to imagine a 2D array:
          on a paper it's an array with rows and columns
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/using/gih-array2D.png" format="PNG"/>
            </imageobject>
          </mediaobject>
          With a 3d array we don't talk rows and columns but
          <guilabel>Dimensions</guilabel> and
          <guilabel>Ranks</guilabel>.
          The first dimension is along x axis, the second dimension along y
          axis, the third along z axis. Each dimension has ranks of cells.
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/using/gih-array3D.png" format="PNG"/>
            </imageobject>
          </mediaobject>
        </para>
        <para lang="en">
          To fill up this array, GIMP starts retrieving cells from the top of
          stack. The way it fills the array reminds that of an odometer: right
          rank digits turn first and, when they reach their maximum, left rank
          digits start running. If you have some memories of Basic programming
          you will have, with an array(4,2,2), the following succession:
          (1,1,1),(1,1,2),(1,2,1),(1,2,2),(2,1,1),(2,1,2),(2,2,2),(3,1,1)....
          (4,2,2). We will see this later in an example.
        </para>
        <para lang="ja">
          これらは結構複雑です。 まずはセルとレイヤーの関係とその配置について
          説明するところから始めましょう。
        </para>
        <para lang="ja">
          <acronym>GIMP</acronym>はこの種のブラシに対してはまずレイヤーごとに
          セルを読み込みにゆき、 それらを<acronym>FIFO</acronym>
          (先入れ先出し: 収められた最も古いものから順に取り出せる収録方法) 式の
          スタックに収めることから始めます。 先の例では4層のレイヤーにそれぞれ
          2個のセルが上下の順に入っています。 これらの読み込みは第1のレイヤーの
          第1のセルから始まり、 同じレイヤーの第2のセル、 第2のレイヤーの第1の
          セル、 第2のレイヤーの第2のセル、 (中略)、 第4のレイヤーの第2のセルの
          順に進みます。 仮に1層のレイヤーに置かれているセルが1個だけでも
          数個でもやはり結果は同じです。 このスタックの様子は 
          <filename class="extension">.gih</filename> 形式
          の画像ファイルに保存したあとでレイヤーダイアログを見るとわかります。
        </para>
        <para lang="ja">
          つぎに<acronym>GIMP</acronym>はこのスタックをコンピュータ式配列に
          記録します。 この配列は1次元から4次元までの <guilabel>次元</guilabel>
          に示された数値を用います。 
        </para>
        <para lang="ja">
          コンピュータ科学での3次元 (3D) では配列が myarray(x,y,z) のような形式
          になります。 2次元を想像するのは簡単でしょう。 つまり紙の上の行と列の
          配列のことです。
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/using/gih-array2D.png" format="PNG"/>
            </imageobject>
          </mediaobject>
          3次元の配列では行や列とは言わず <guilabel>次元</guilabel> と
          <guilabel>並び</guilabel> といいます。
          第1次元はx軸、 第2次元はy軸、 第3次元はz軸のことを指しています。
          それぞれの次元にセルの並びがあるのです。
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/using/gih-array3D.png" format="PNG"/>
            </imageobject>
          </mediaobject>
        </para>
        <para lang="ja">
          <acronym>GIMP</acronym>はスタックの上のセル (先に入ったセル) から順に
          取り出してこの配列を埋めてゆきます。 配列を埋める様子は自動車の走行
          メータのカウンタのようなものです。 並びを桁とみなしてください。
          右端の桁をまず回し、 そこが最大数に達したら左隣の桁を回します。
          プログラミングの基本を思い返していただきたいのですが、 array(4,2,2)
          を展開すると (1,1,1)、 (1,1,2)、 (1,2,1)、 (1,2,2)、 (2,1,1)、
          (2,1,2)、 (2,2,2)、 (3,1,1)、 &hellip;中略&hellip;、  (4,2,2) となる
          はずです。
        </para>
        <para lang="en">
          Besides the rank number that you can give to each dimension, you can
          also give them a <guilabel>Selection</guilabel> mode. You have
          several modes that will be applied when drawing:
        </para>
        <para lang="ja">
          各次元にそれぞれ桁数のように並びの数値を与えられるほかに、 これらには
          <guilabel>選択</guilabel> モードも与えられます。 使えるモードはつぎの
          とおり。
        </para>
        <variablelist>
          <varlistentry>
            <term>Incremental</term>
            <listitem>
              <para lang="en">
                <acronym>GIMP</acronym> selects a rank from the concerned
                dimension according to the order ranks have in that dimension.
              </para>
              <para lang="ja">
                指定された次元から次元上での順序に従って位を選びます。
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Random</term>
            <listitem>
              <para lang="en">
                <acronym>GIMP</acronym> selects a rank at random from the
                concerned dimension.
              </para>
              <para lang="ja">
                与えられた次元から無作為に位を選択します。
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Angular</term>
            <listitem>
              <para lang="en">
                <acronym>GIMP</acronym> selects a rank in the concerned
                dimension according to the moving angle of the brush.
              </para>
              <para lang="en">
                The first rank is for the direction 0°, upwards. The other
                ranks are affected, clockwise, to an angle whose value
                is 360/number of ranks. So, with 4 ranks in the concerned
                dimension, the angle will move 90° clockwise for each
                direction change: second rank will be affected to 90°
                (rightwards), third rank to 180° (downwards) and fourth rank to
                270° (-90°) (leftwards).<footnote><para>
                  For previous <acronym>GIMP</acronym> versions you may have
                  to replace <quote>clockwise</quote> with
                  <quote>counter-clockwise</quote>.
                </para></footnote>
              </para>
              <para lang="ja">
                ブラシが移動する方角を参考にして
                与えられた次元から位を選びます。
              </para>
              <para lang="ja">
                最初の位は 0°、 つまり上向き方向に結びつけます。 つづく他の
                位には桁数で 360° を等分割した方角を時計回りの順に割り振って
                ゆきます。 例えばこの次元に4つの位があればブラシの移動の方角は
                それぞれ時計回りに 90° ずつの区切りのどれかに拾われます。
                つまり2番目の位は第4象限、 3番目の位は第3象限、 4番目の位は
                第2象限の各方向への動きに反応するようになるのです。 <footnote>
                <para>
                  前の版の<acronym>GIMP</acronym>でブラシを作成される方は
                  <quote>時計回り</quote>を<quote>反時計回り</quote>と
                  読み替えてください。
                </para></footnote>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term lang="en">Speed, Pressure, x tilt, y tilt</term>
            <term lang="ja">Velocity, Pressure, x tilt, y tilt</term>
            <listitem>
              <para lang="en">
                These options are for sophisticated drawing tablets.
              </para>
              <para lang="en">
                これらは高度なタブレット描画のためのオプションです。
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </listitem>
    </varlistentry>
  </variablelist>

  <variablelist>
    <title lang="en">Examples</title>
    <title lang="ja">例</title>
    <varlistentry>
      <term lang="en">A one dimension image pipe</term>
      <term lang="ja">1次元のパイプブラシ</term>
      <listitem>
        <para lang="en">
          Well! What is all this useful for? We'll see that gradually with
          examples. You can actually place in each dimension cases that will
          give your brush a particular action.
        </para>
        <para lang="en">
          Let us start with a 1D brush which will allow us to study selection
          modes action. We can imagine it like this:
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/using/gih-array1D.png" format="PNG"/>
            </imageobject>
          </mediaobject>
          Follow these steps:
        </para>
        <para lang="ja">
          「おいおい！ そんなの何の役に立つの？」 答え: この例はこれから
          だんだんとグレードアップします。 次元も上げていきますから効果的な
          ブラシもちゃんと作れます。
        </para>
        <para lang="ja">
          まずは1次元ブラシからはじめますが、 これでも選択モードのはたらきが
          わかるようになります。 下図のような配列を思い起こしてください。
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/using/gih-array1D.png" format="PNG"/>
            </imageobject>
          </mediaobject>
          順を追ってゆきましょう。
        </para>
        <procedure>
          <step>
            <para lang="en">
              Open a new 30x30 pixels image, RGB with Transparent fill type.
              Using the Text tool create 4 layers <quote>1</quote>,
              <quote>2</quote>, <quote>3</quote>, <quote>4</quote>. Delete the
              <quote>background</quote> layer.
            </para>
            <para lang="ja">
              大きさが 30&times;30 ピクセルで塗りつぶし色を透明にした 
              <acronym>RGB</acronym>画像を新規に用意します。 テキストツールで
              テキストレイヤーを4層、 それぞれ <quote>1</quote>、
              <quote>2</quote>、 <quote>3</quote>、 <quote>4</quote>と記入
               します。 背景レイヤーは削除してください。
            </para>
          </step>
          <step>
            <para lang="en">
              Save this image first with
              <filename class="extension">.xcf</filename> extension to keep
              its properties then save it as
              <filename class="extension">.gih</filename>.
            </para>
            <para lang="ja">
              拡張子 <filename class="extension">.gih</filename> をつけて保存
              する前に、 元の画像の全ての属性を保存するためにこの画像に拡張子
              <filename class="extension">.xcf</filename> をつけて
              保存してください。
            </para>
          </step>
          <step>
            <para lang="en">
              The Save As Dialog is opened: select a destination for your
              image. OK. The GIH dialog is opened: Choose Spacing 100, give a
              name in Description box, 30x30 for Cell Size, 1 dimension,
              4 ranks and choose <quote>Incremental</quote> in Selection box.
              OK.
            </para>
            <para lang="en">
              <acronym>GIH</acronym>形式で保存するときにはまず<quote>
              画像を保存</quote>ダイアログが出ますから名前と保存先を指定して
              ください。 次に<quote>ブラシパイプ形式で保存</quote>ダイアログ
              が現れますから、 <guilabel>間隔</guilabel> は <userinput>100
              </userinput> パーセントに、 <guilabel>説明</guilabel> には任意
              の名前を、 <guilabel>セルサイズ</guilabel> は <userinput>30
              </userinput> &times; <userinput>30</userinput> のまま、
              <guilabel>次元</guilabel> は <userinput>1</userinput> 次元に、
              <guilabel>並び</guilabel> には <userinput>4</userinput> と
              <guimenuitem>Incremental</guimenuitem> を指定してから、
              <guibutton>保存</guibutton>
              ボタンを押します。
            </para>
          </step>
          <step>
            <para lang="en">
              You may have difficulties to save directly in the GIMP Brush
              directory. In that case, save the
              <filename class="extension">.gih</filename> file manually into
              the <filename
              class="directory">/usr/share/gimp/gimp/2.0/brushes</filename>
              directory. Then come back into the Toolbox, click in the brush
              icon to open the Brush Dialog then click on
              <guibutton>Refresh</guibutton>
              <guiicon>
                <inlinegraphic
                  fileref="images/dialogs/stock-reload-16.png"/>
              </guiicon>
              icon button. Your new brush appears in the
              Brush window. Select it. Select pencil tool for instance and
              click and hold with it on a new image:
              <mediaobject>
                <imageobject>
                  <imagedata format="PNG"
                    fileref="images/using/gih1234incr.png"/>
                </imageobject>
                <caption>
                  <para>
                    You see 1, 2, 3, 4 digits following one another in order.
                  </para>
                </caption>
              </mediaobject>
            </para>
            <para lang="en">
              <acronym>GIMP</acronym>のブラシディレクトリに直接保存する機能が
              うまくはたらかないときは、 後で個人用の<acronym>GIMP</acronym>
              フォルダ内にある <filename class="directory">brushes</filename>
              フォルダに <filename class="extension">.gih</filename> ファイル
              を移してください。 さてツールボックスに戻ったら、 ブラシ
              アイコンをクリックしてブラシダイアログを呼びだし、 ダイアログ
              下部の
              <guiicon>
                <inlinemediaobject>
                  <imageobject>
                    <imagedata
                      fileref="images/dialogs/stock-reload-16.png"/>
                  </imageobject>
                  <textobject>
                    <phrase>「ブラシの再読み込み」</phrase>
                  </textobject>
                </inlinemediaobject>
              </guiicon> アイコンボタンをクリックしてください。
              ダイアログウィンドウ内にあなたのブラシが現れますので、 それを
              選びましょう。 試しに<quote>鉛筆で描画</quote>ツールを選んで
              白紙の画像に描いてみるとこうなります。
              <mediaobject>
                <imageobject>
                  <imagedata format="PNG"
                    fileref="images/using/gih1234incr.png"/>
                </imageobject>
                <caption>
                  <para>数字の1と2と3と4が順番通りに並んでいる</para>
                </caption>
              </mediaobject>
            </para>
          </step>
          <step>
            <para lang="en">
              Take your <filename class="extension">.xcf</filename> image file
              back and save it as <filename class="extension">.gih</filename>
              setting Selection to <quote>Random</quote>:
              <mediaobject>
                <imageobject>
                  <imagedata format="PNG"
                    fileref="images/using/gih1234rand.png"/>
                </imageobject>
                <caption>
                  <para>
                    Digits will be displayed at random order.
                  </para>
                </caption>
              </mediaobject>
            </para>
            <para lang="en">
              保存しておいた <filename class="extension">.xcf</filename> 
              画像を読み戻してから、 今度は並びの選択に 
              <guimenuitem>Random</guimenuitem> を選んで
              <filename class="extension">.gih</filename> 形式で保存します。
              <mediaobject>
                <imageobject>
                  <imagedata format="PNG"
                    fileref="images/using/gih1234rand.png"/>
                </imageobject>
                <caption>
                  <para>数字が順不同に並ぶ</para>
                </caption>
              </mediaobject>
            </para>
          </step>
          <step>
            <para lang="en">
              Now select <quote>Angular</quote> Selection:
              <mediaobject>
                <imageobject>
                  <imagedata format="PNG"
                    fileref="images/using/1234angl.png"/>
                </imageobject>
              </mediaobject>
            </para>
            <para lang="ja">
              並びの選択が <guimenuitem>Angular</guimenuitem>
              ならこうなります。
              <mediaobject>
                <imageobject>
                  <imagedata format="PNG"
                    fileref="images/using/1234angl.png"/>
                </imageobject>
              </mediaobject>
            </para>
          </step>
        </procedure>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term lang="en">A 3 dimensions image hose</term>
      <term lang="ja">3次元のパイプブラシ</term>
      <listitem>
        <para lang="en">
          We are now going to create a 3D animated brush: its orientation will
          vary according to brush direction, it will alternate Left/Right
          hands regularly and its color will vary at random between black and
          blue.
        </para>
        <para lang="en">
          The first question we have to answer to is the number of images that
          is necessary. We reserve the first dimension (x) to the brush
          direction (4 directions). The second dimension (y) is for Left/Right
          alternation and the third dimension (z) for color variation. Such a
          brush is represented in a 3D array <quote>myarray(4,2,2)</quote>:
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/using/gih-3Dnum.png" format="PNG"/>
            </imageobject>
          </mediaobject>
          There are 4 ranks in first dimension (x), 2 ranks in second
          dimension (y) and 2 ranks in third dimension (z). We see that there
          are 4x2x2 = 16 cells. We need 16 images.
        </para>
        <para lang="ja">
          さていよいよ3次元のアニメーションブラシをつくるところまで来ました。
          ブラシの方角によってブラシの刻印の向きを変えつつ左手と右手を交互に
          描き、 黒か青に無作為に色変りするブラシにします。
        </para>
        <para lang="ja">
          まずはじめにいくつの形象が必要になるかが問題になります。 第1次元 x は
          ブラシの方角 (4方向) のためにとっておきます。 第2次元 y は左手と右手
          の交替に、 第3次元 z は色変化に割り当てます。 このようなブラシは
          3次元配列 myarray(4,2,2) として表せます。
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/using/gih-3Dnum.png" format="PNG"/>
            </imageobject>
          </mediaobject>
          第1次元 x には4つの位があり、 第2次元 y には2つの位、 第3次元 z には
          2つの位があります。 合計は 4&times;2&times;2 = 16 セルなので、 必要な
          形象は 16 枚です。
        </para>
        <procedure>
          <step>
            <title lang="en">Creating images of dimension 1 (x)</title>
            <title lang="ja">第1次元 x の形象を作成</title>
            <para lang="en">
              Open a new 30x30 pixels image, RGB with Transparent Fill Type.
              Using the zoom draw a left hand with fingers upwards.<footnote>
              <para>
                Ok, we are cheating here: our hand is borrowed from <ulink
                url="http://commons.wikimedia.org/wiki/File:Stop_hand.png"/>.
              </para></footnote>
              Save it as <filename>handL0k.xcf</filename> (hand Left 0°
              Black).
            </para>
            <para lang="en">
              Open the Layer Dialog. Double click on the layer to open the
              Layer Attributes Dialog and rename it to handL0k.
            </para>
            <para lang="en">
              Duplicate the layer. Let visible only the duplicated layer,
              select it and apply a 90° rotation (Layer/Transform/ 90°
              rotation clockwise). Rename it to handL90k.
            </para>
            <para lang="en">
              Repeat the same operations to create handL180k and handL-90k (or
              handL270k).
            </para>
            <para lang="ja">
              塗りつぶし色に透明を
              指定した 30&#times;30 ピクセルの<acronym>RGB</acronym>画像を
              新たに用意します。 拡大ズーム表示を利用しながら指が上向きの左手を
              描いてください。<footnote>
              <para>
                まあいいでしょう。 ここはちょっと安直に <ulink 
                url="http://commons.wikimedia.org/wiki/File:Stop_hand.png"/> 
                から手を借りましょう。
              </para></footnote>
              これを <filename>handL0k.xcf</filename> (左手、 0度、 黒) の
              名前で保存します。
            </para>
            <para lang="ja">
              レイヤーダイアログを開いて、 そのレイヤーの名前を <quote>
              <userinput>左手　0黒</userinput></quote>にします。 (レイヤー
              名欄をダブルクリックして直に書き直すか、 レイヤーメニューより
              <guimenuitem>レイヤー名を変更...</guimenuitem>
              と進んで<quote>レイヤー名の変更</quote>ダイアログ上で新しい名前に
              します)。
            </para>
            <para lang="ja">
              そのレイヤーを複製してください。 つぎに複製レイヤーだけを可視化し
              活性化してから、 90° 回転をかけます (画像ウィンドウのメニューより
              <menuchoice>
                <guimenu>レイヤー</guimenu>
                <guisubmenu>変換</guisubmenu>
                <guimenuitem>時計回りに 90 度回転</guimenuitem>
              </menuchoice> )。
              そのレイヤーの名前を<quote><userinput>左手&nbsp;90黒</userinput>
              </quote>とします。
            </para>
            <para lang="ja">
              同様にして<quote><userinput>左手180黒</userinput></quote>と
              <quote><userinput>左手-90黒</userinput></quote> (もしくは
              <quote><userinput>左手270黒</userinput></quote>) も作ります。
            </para>
          </step>
          <step>
            <title lang="en">Creating images of dimension 2 (y)</title>
            <title lang="ja">第2次元 y の形象を作成</title>
            <para lang="en">
              This dimension in our example has two ranks, one for left hand
              and the other for right hand. The left hand rank exists yet. We
              shall build right hand images by flipping it horizontally.
            </para>
            <para lang="en">
              Duplicate the handL0k layer. Let it visible only and select it.
              Rename it to handR0K. Apply Layer/Transform/Flip Horizontally.
            </para>
            <para lang="en">
              Repeat the same operation on the other left hand layers to
              create their right hand equivalent.
            </para>
            <para lang="en">
              Re-order layers to have a clockwise rotation from top to
              bottom, alternating Left and Right: handL0k, handR0k, handL90k,
              handR90k, ..., handR-90k.
            </para>
            <para lang="ja">
              この例題では第2次元に2つの位を置き、 1つめに左手を、 2つめには
              右手を割り当てます。 左手の位はもうできています。 水平方向の
              鏡像反転を利用して右手の形象をつくりましょう。
            </para>
            <para lang="ja">
              <quote><userinput>左手　0黒</userinput></quote>レイヤーを複製
              します。 複製レイヤーのみ可視化して、 レイヤー名を<quote>
              <userinput>右手　0黒</userinput></quote>に変更します。 画像
              ウィンドウのメニューより
              <menuchoice>
                <guimenu>レイヤー</guimenu>
                <guisubmenu>変換</guisubmenu>
                <guimenuitem>水平反転</guimenuitem>
              </menuchoice> します。
            </para>
            <para lang="ja">
              同様に左手のレイヤーから相応する右手のレイヤーを作ってください。
            </para>
            <para lang="ja">
              時計回りの順にレイヤーを並び替え、 左手と右手が交互に現れるように
              します。 つまり<quote><userinput>左手　0黒</userinput></quote>、 
              <quote><userinput>右手　0黒</userinput></quote>、 <quote>
              <userinput>左手&nbsp;90黒</userinput></quote>、 <quote>
              <userinput>右手&nbsp;90黒</userinput></quote>、 中略、 
              <quote><userinput>右手-90黒</userinput></quote>と並ぶはずです。
            </para>
          </step>
          <step>
            <title lang="en">Creating images of dimension 3 (z)</title>
            <title lang="ja">第3次元 z の形象を作成</title>
            <para lang="en">
              The third dimension has two ranks, one for black color and the
              other for blue color. The first rank, black, exists yet. We well
              see that images of dimension 3 will be a copy, in blue, of the
              images of dimension 2. So we will have our 16 images. But a row
              of 16 layers is not easy to manage: we will use layers with two
              images.
            </para>
            <para lang="en">
              Select the handL0k layer and let it visible only. Using
              Image/Canvas Size change canvas size to 60x30 pixels.
            </para>
            <para lang="en">
              Duplicate hand0k layer. On the copy, fill the hand with blue
              using Bucket Fill tool.
            </para>
            <para lang="en">
              Now, select the Move tool.  Check <guilabel>Move the Active Layer
              </guilabel> option on its Tool Option Dialog.  Move the blue hand
              into the right part of the layer precisely with the help of
              <guisubmenu>Zoom</guisubmenu>.
            </para>
            <para lang="en">
              You should marge handL0k and its blue copy.  GIMP provides two
              ways to do this, you can choice any of them.  First one, place
              the replica layer with blue on the next beneath of handL0k layer,
              then apply <guimenuitem>Merge Down</guimenuitem> command of Layer
              menu.   Or you can also merge them, if you give visibility only
              handL0k and its blue dupulicated layer on the Layer Dialog, by
              applying the <guimenuitem>Merge Visible Layers...</guimenuitem>
              command with <guilabel>Expand as Necessary</guilabel> option on
              its Dialog.  You get a 60x30 pixels layer with the black hand on
              the left and the blue hand on the right. Rename it to <quote>
              handL0</quote>.
            </para>
            <para lang="en">
              Repeat the same operations on the other layers.
            </para>
            <para lang="ja">
              第3の次元には2つの位を設け、 ひとつは黒くもうひとつは青く
              塗ります。 黒の第1の位はもうできています。 しかも第3次元の形象は
              いずれも第2次元の形象を複製して青色に変えればできあがることは
              もうおわかりですね。 以上で16枚全ての形象が出揃うことになります。
              しかし16ものレイヤーの列は管理がたいへんです。 そこでレイヤーに
              2つづつ形象を収めるようにしてしまいましょう。
            </para>
            <para lang="ja">
              <quote><userinput>左手　0黒</userinput></quote>のレイヤーを選んで
              それだけを可視化します。 画像ウィンドウのメニューより
              <menuchoice>
                <guimenu>画像</guimenu>
                <guimenuitem>キャンバスサイズの変更...</guimenuitem>
              </menuchoice>
              を使ってキャンバスの大きさを 60&times;30 ピクセルに変更します。
            </para>
            <para lang="ja">
              <quote><userinput>左手　0黒</userinput></quote>のレイヤーを複製
              して、 複製レイヤーの掌を塗りつぶしツールで青くします。
            </para>
            <para lang="ja">
              そうしたら移動ツールを起用してください。 ツールオプションの
              <guilabel>アクティブなレイヤーを移動</guilabel> にチェックを入れ
              ます。 青い掌をレイヤーの右側の区画に、 拡大ズーム表示の助けを借り
              ながら正確に置いてください。
            </para>
            <para lang="ja">
              つぎに<quote><userinput>左手　0黒</userinput></quote>レイヤーと
              その青コピーを統合しなければなりません。 <acronym>GIMP</acronym>
              には2通りの方法がありますのでお好きな手順をとってください。 
              ひとつめは、 青の複製レイヤーをレイヤーダイアログ上で<quote>
              <userinput>左手　0黒</userinput></quote>のすぐ下に置いて、 
              レイヤーメニューから <guimenuitem>
              下のレイヤーと統合</guimenuitem>する方法です。
              もうひとつは<quote><userinput>左手　0黒</userinput></quote>
              レイヤーとその青い複製レイヤーだけを可視化したうえで、 レイヤー
              メニューから <guimenuitem>可視レイヤーの統合...
              </guimenuitem> とすると現れるダイアログで <guimenuitem>
              対象レイヤーを内包するサイズ</guimenuitem> を選んで実行します。 
              左側に黒の掌、 右側に青の掌が並んだ 60&times;30 ピクセルの
              レイヤーができあがります。 その名前を<quote><userinput>左手　0
              </userinput></quote>に変えてください。
            </para>
            <para lang="ja">
              他のレイヤーに対しても同じ手順を繰り返してください。
            </para>
          </step>
          <step>
            <title lang="en">Set layers in order</title>
            <title lang="ja">レイヤーを順番通り並べます</title>
            <para lang="en"> 
              Layers must be set in
              order so that GIMP can find the required image at some point
              of using the brush. Our layers are yet in order but we must
              understand more generally how to have them in order.  There are
              two ways to imagine this setting in order. The first method is
              mathematical: GIMP divides the 16 layers first by 4; that gives
              4 groups of 4 layers for the first dimension. Each group
              represents a direction of the brush. Then, it divides each group
              by 2; that gives 8 groups of 2 layers for the second dimension:
              each group represents a L/R alternation. Then another division
              by 2 for the third dimension to represent a color at random
              between black and blue.
            </para>
            <para lang="en">
              The other method is visual, by using the array representation.
              Correlation between two methods is represented in next image:
              <mediaobject>
                <imageobject>
                    <imagedata format="PNG"
                      fileref="images/using/gih-correlation.png"/>
                </imageobject>
              </mediaobject>
            </para>
            <para lang="en">
              <emphasis>How will GIMP read this array?</emphasis>: GIMP
              starts with the first dimension which is programmed for
              <quote>angular</quote>, for instance 90°. In this 90°
              rank, in yellow, in the second dimension, it selects a L/R
              alternation, in an <quote>incremental</quote> way. Then,
              in the third dimension, in a random way, it chooses a color.
              Finally, our layers must be in the following order:
              <mediaobject>
                <imageobject>
                    <imagedata format="PNG"
                      fileref="images/using/gih-hands-layers.png"/>
                </imageobject>
              </mediaobject>
            </para>
            <para lang="ja">
              ブラシを使った
              ときの動作に対して要求通りの形象を<acronym>GIMP</acronym>が拾える
              ように、 レイヤーを順序よく配置しなければなりません。 既に例題の
              レイヤーはその順序で並べ終えていますが、 レイヤーの配置順の一般的
              な方則についても理解しておく必要があるでしょう。 序列化のしくみに
              ついて見当をつける方法が2通りありますのでご紹介しましょう。
              1つめは数学的な見方です。 <acronym>GIMP</acronym>は16層のレイヤー
              を4層ごとに区切って4つのグループとみなし、 これが第1次元に
              なります。 それぞれのグループがブラシの方角を表すのです。
              さらに、 それぞれのグループを2つに分けて、 2層のレイヤーからなる
              8つのグループとみなし、 これが第2次元になります。 このグループは
              それぞれ左右の掌の転換を表します。 第3次元では全体を2つのグループ
              に分け、 青か黒の無作為な色分けを表します。
            </para>
            <para lang="ja">
              もう一つの方法は配列を視覚的に表現してみることです。 先に示した
              見方との相関図を下に示します。
              <mediaobject>
                <imageobject>
                    <imagedata format="PNG"
                      fileref="images/using/gih-correlation.png"/>
                </imageobject>
              </mediaobject>
            </para>
            <para lang="ja">
              <emphasis><acronym>GIMP</acronym>はどんなふうにしてこの配列を
              読み込むか？</emphasis>: <acronym>GIMP</acronym>が最初に読み取る
              のは第1次元です。 例題では <guimenuitem>angular</guimenuitem>
              (ブラシ方向: 例えば 90°) に結びつけてプログラムされています。
              90° の位をみると、 黄色で示した第2次元では <guimenuitem>
              incremental</guimenuitem> 選択によって左右の転換をしています。
              そして第3の次元では、 無作為に色を選択しています。
              よって最終的にレイヤーの順序は次のようにしなければなりません。
              <mediaobject>
                <imageobject>
                    <imagedata format="PNG"
                      fileref="images/using/gih-hands-layers.png"/>
                </imageobject>
              </mediaobject>
            </para>
          </step>
          <step>
            <para lang="en">
              Voila. Your brush is ready. Save it as
              <filename class="extension">.xcf</filename> first, then as
              <filename class="extension">.gih</filename> with the following
              parameters:
            </para>
            <para lang="ja">
              ほらね。 ブラシができました。 先に拡張子
              <filename class="extension">.xcf</filename> をつけて
              保存してから、 <acronym>GIH</acronym>形式ではつぎのような
              パラメータで保存します。
            </para>
            <itemizedlist>
              <listitem>
                <para lang="en">Spacing: 100</para>
                <para lang="ja">
                  <guilabel>間隔</guilabel>:
                  <userinput>100</userinput> パーセント
                </para>
              </listitem>
              <listitem>
                <para lang="en">Description: Hands</para>
                <para lang="ja">
                  <guilabel>説明</guilabel>: <userinput>手</userinput>
                </para>
              </listitem>
              <listitem>
                <para lang="en">Cell Size: 30x30</para>
                <para lang="ja">
                  <guilabel>セルサイズ</guilabel>: <userinput>30</userinput>
                  &times; <userinput>30</userinput> 
                </para>
              </listitem>
              <listitem>
                <para lang="en">Number of cells: 16</para>
                <para lang="ja">
                  <guilabel>セル数</guilabel>: <userinput>16</userinput>
                </para>
              </listitem>
              <listitem>
                <para lang="en">Dimensions: 3</para>
                <para lang="ja">
                  <guilabel>次元</guilabel>: <userinput>3</userinput>
                </para>
                <itemizedlist>
                  <listitem>
                    <para lang="en">
                      Dimension 1: 4 ranks Selection: Angular
                    </para>
                    <para lang="ja">第1次元: 4桁、 選択: Angular</para>
                  </listitem>
                  <listitem>
                    <para lang="en">
                      Dimension 2: 2 ranks Selection: Incremental
                    </para>
                    <para lang="ja">第2次元: 2桁、 選択: Incremental</para>
                  </listitem>
                  <listitem>
                    <para lang="en">
                      Dimension 3: 2 ranks Selection: Random
                    </para>
                    <para lang="ja">第3次元: 2桁、 選択: Random</para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
            <para lang="en">
              Place your <filename class="extension">.gih</filename> file into
              <acronym>GIMP</acronym> brush directory and refresh the brush
              box. You can now use your brush.
            </para>
            <para lang="ja">
              個人用の<acronym>GIMP</acronym>ブラシディレクトリに <filename 
              class="extension">.gih</filename> ファイルを置いて
              ブラシダイアログで再読み込みします。 
              その時点でこのブラシが使用できるようになりました。
            </para>
            <figure>
              <title lang="en">
                Here is the result by stroking an elliptical selection
                with the brush:
              </title>
              <para lang="ja">
                例題のブラシを用いて楕円選択の境界線を描画した結果を示す。
              </para>
              <mediaobject>
                <imageobject>
                  <imagedata format="PNG"
                    fileref="images/using/gih-hands_stroke.png"/>
                </imageobject>
                <caption>
                  <para lang="en">
                    This brush alternates right hand and left hand regularly,
                    black and blue color at random, direction according to
                    four brush directions.
                  </para>
                  <para lang="ja">
                    このブラシの左手と右手はかわるがわる入れ替わり、 無作為に
                    黒と青の色変りが起こり、 ブラシの方向は4つの方角に
                    従っている。
                  </para>
                </caption>
              </mediaobject>
            </figure>
          </step>
        </procedure>
      </listitem>
    </varlistentry>
  </variablelist>
</sect1>
